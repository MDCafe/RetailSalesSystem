<UserControl x:Class="RetailManagementSystem.View.Accounts.CustomerBillPayments"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RetailManagementSystem.View.Accounts"
        xmlns:toolKit="http://schemas.microsoft.com/wpf/2008/toolkit"
        xmlns:Conv="clr-namespace:RetailManagementSystem.Converter"    
        FocusManager.FocusedElement="{Binding ElementName=CboCustomers}"
        mc:Ignorable="d">
    <Grid Margin="0,0,0,8">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="120"/>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition Width="131*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="300"/>
            <RowDefinition Height="40"/>
        </Grid.RowDefinitions>
        <Label x:Name="label" Content="Customers" HorizontalAlignment="Left" Margin="5,5,0,5" Grid.Row="0" Grid.Column="0" />
        <ComboBox x:Name="CboCustomers" DisplayMemberPath="Name"  HorizontalContentAlignment="Stretch" SelectedValuePath=""
                      ItemsSource="{Binding CustomersList}"  IsEditable="True"  SelectedItem="{Binding SelectedCustomer}"                                
                      HorizontalAlignment="Left" Grid.Row="0" Grid.Column="1" Margin="5" Height="25" Width="190" >
            <ComboBox.ItemContainerStyle>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <Grid Height="30" Width="Auto">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="200"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Label Margin="1" Grid.Row="0" Grid.Column="0" Content="{Binding Name}" HorizontalAlignment="Left"/>
                                    <Label Margin="1" Grid.Row="0" Grid.Column="2" Content="{Binding BalanceDue,StringFormat=N2}" HorizontalAlignment="Right"/>
                                </Grid>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ComboBox.ItemContainerStyle>
        </ComboBox>
        <Button x:Name="button" Content="Get Bills" Grid.Column="2" Grid.Row="0" HorizontalAlignment="Left" Margin="5,5,0,5" Width="75" Height="30"
                Command="{Binding GetBillsCommand}"/>

        <TextBox x:Name="txtAllocationAmount" Grid.Column="1" HorizontalAlignment="Left" Margin="5" Grid.Row="1" TextWrapping="Wrap" Text="{Binding AllocationAmount}" Width="190" Height="25"/>
        <Button x:Name="btnAllocate" Content="Allocate" Grid.Column="2" Grid.Row="1" HorizontalAlignment="Left" Margin="5" Width="75" Height="30"
                Command="{Binding AllocateCommand}" CommandParameter="{Binding ElementName=txtAllocationAmount}"/>
        <Label Content="Allocation Amount" HorizontalAlignment="Left" Margin="5,5,0,5" Grid.Row="1" Grid.Column="0" />

        <!--DataGrid-->
        <toolKit:DataGrid Name="CustomerBillsDataGrid" IsSynchronizedWithCurrentItem="True" 
                                      ItemsSource="{Binding CustomerPaymentDetailsList}"  
                                      AutoGenerateColumns="False" RowHeight="25" 
                                      Grid.Row="2"
                                      SelectionMode="Single" Grid.ColumnSpan="4"
                                      RowHeaderWidth="25"
                                      SelectionUnit="FullRow"
                                      CanUserSortColumns="False" CanUserReorderColumns="False"  CanUserAddRows="False" CanUserDeleteRows="False" Margin="0,10">
            <toolKit:DataGrid.Resources>
                <Conv:StringToDateConverter x:Key="StringToDateConverter"/>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="LightYellow"/>
                </Style>
                <Style TargetType="DataGridCell">
                    <Setter Property="IsEnabled" Value="{Binding PropertyReadOnly}" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="#6F0090FF"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>

                <Style x:Key="errorStyle" TargetType="{x:Type TextBox}">
                    <Setter Property="Padding" Value="-2"/>
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="Background" Value="Red"/>
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightBlue" />
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />

            </toolKit:DataGrid.Resources>
            <toolKit:DataGrid.RowHeaderTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Item.SerialNo, 
                                                    RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type toolKit:DataGridRow}}}"/>

                </DataTemplate>
            </toolKit:DataGrid.RowHeaderTemplate>

            <toolKit:DataGrid.Columns>
                <toolKit:DataGridTextColumn Header="Bill Id" Binding="{Binding RunningBillNo}" EditingElementStyle="{StaticResource errorStyle}" IsReadOnly="True" ElementStyle="{StaticResource DataGridCellRightAlign}"/>
                <!--<toolKit:DataGridTextColumn Width="150" Header="Internal BillId" Binding="{Binding BillId,StringFormat=N2}" ElementStyle="{StaticResource DataGridCellRightAlign}" />-->
                <toolKit:DataGridTextColumn Width="150" Header="Bill Amount" Binding="{Binding TotalAmount,StringFormat=N2}" IsReadOnly="True" ElementStyle="{StaticResource DataGridCellRightAlign}" />
                <toolKit:DataGridTextColumn Width="150" Header="Bill Dated" Binding="{Binding AddedOn,StringFormat='dd/MM/yyyy'}" IsReadOnly="True" ElementStyle="{StaticResource DataGridCellRightAlign}"/>
                <toolKit:DataGridTextColumn Width="150" Header="Amount Paid" Binding="{Binding AmountPaid}" IsReadOnly="True" ElementStyle="{StaticResource DataGridCellRightAlign}"/>
                <toolKit:DataGridTextColumn Width="150" Header="Balance Amount" Binding="{Binding BalanceAmount}"  IsReadOnly="True" ElementStyle="{StaticResource DataGridCellRightAlign}"/>
                <toolKit:DataGridComboBoxColumn Width="150" Header="Payment Mode" x:Name="ComboBoxColumn"
                                               SelectedValuePath="Id" DisplayMemberPath="Description" SelectedItemBinding="{Binding PaymentMode}">
                </toolKit:DataGridComboBoxColumn>
                <toolKit:DataGridTextColumn Width="150" Header="Amount Paying" Binding="{Binding CurrentAmountPaid}"  ElementStyle="{StaticResource DataGridCellRightAlign}"/>
                <toolKit:DataGridTextColumn Width="150" Header="Cheque No" Binding="{Binding ChequeNo}"  ElementStyle="{StaticResource DataGridCellRightAlign}"/>
                <toolKit:DataGridTextColumn Width="150" Header="Cheque Date" Binding="{Binding ChequeDate, StringFormat=\{0:dd/MM/yy\},Converter={StaticResource StringToDateConverter}}"  ElementStyle="{StaticResource DataGridCellRightAlign}"/>
                <!--<toolKit:DataGridCheckBoxColumn Width="150" Header="Chq. Realised" Binding="{Binding IsChequeRealised}" />-->
            </toolKit:DataGrid.Columns>
            <toolKit:DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type toolKit:DataGridColumnHeader}">
                    <Setter Property="FontWeight"  Value="Bold" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                </Style>
            </toolKit:DataGrid.ColumnHeaderStyle>
        </toolKit:DataGrid>
        <!--DataGrid-->
        <!--<CheckBox x:Name="checkBox" Content="Auto Allocate" HorizontalAlignment="Left" Margin="5" Grid.Row="1"  VerticalAlignment="Center"/>-->
        
        <StackPanel Orientation="Horizontal" Grid.Row="3"  HorizontalAlignment="Right" Height="40" Grid.ColumnSpan="3">
            <Button x:Name="btnSave" Content="Save"  Width="80" Command="{Binding SaveCommand}" Margin="5" CommandParameter="SaveOnly"/>
            <Button x:Name="btClear" Content="Clear"  Width="80" Command="{Binding ClearCommand}"  Margin="5" />
            <Button x:Name="btCancel" Content="Cancel"  Width="80" Command="{Binding CloseCommand}"  Margin="5"/>
        </StackPanel>
    </Grid>
</UserControl>
