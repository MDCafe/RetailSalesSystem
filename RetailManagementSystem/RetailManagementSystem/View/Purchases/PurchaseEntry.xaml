<UserControl x:Class="RetailManagementSystem.View.Purchases.PurchaseEntry"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"              
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"
             xmlns:toolKit="http://schemas.microsoft.com/wpf/2008/toolkit"
             xmlns:BHCustCtrl="clr-namespace:BHCustCtrl;assembly=BHCustCtrl"    
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:Validator="clr-namespace:RetailManagementSystem.Validation" 
             xmlns:behaviours="clr-namespace:RetailManagementSystem.View.Behaviours"
             xmlns:Conv="clr-namespace:RetailManagementSystem.Converter"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="800"
             FocusManager.FocusedElement="{Binding ElementName=CboCompanies}"
             xmlns:UC="clr-namespace:RetailManagementSystem.UserControls"
             >
    <UserControl.Resources>
        <Style TargetType="{x:Type DatePickerTextBox}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBox x:Name="PART_TextBox"
                             Text="{Binding Path=SelectedDate, StringFormat='dd/MM/yyyy', 
                             RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ValidationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
        <Conv:StringToDateConverter x:Key="StringToDateConverter"/>
    </UserControl.Resources>
    <xctk:BusyIndicator IsBusy="{Binding DataContext.PanelLoading, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="113" />
                <ColumnDefinition Width="106"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="213"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="34"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="100*"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Content="Date :" Grid.Row="0" Grid.Column="0" Margin="0,5,0,0"/>
            <DatePicker Name="SalesDate" ForceCursor="True" FirstDayOfWeek="Monday" 
                        SelectedDateFormat="Short" SelectedDate="{Binding TranscationDate}" BorderThickness="0" Grid.Column="1" Margin="0,5,0,0" Height="25"
                        IsEnabled="{Binding NegateIsEditMode}"/>
            <Label Content="Supplier Name :" Grid.Row="0" Grid.Column="2" Margin="0,5,0,0"/>
            <ComboBox x:Name="CboCompanies" SelectedValuePath="Id" DisplayMemberPath="Name"  HorizontalContentAlignment="Stretch" 
                        ItemsSource="{Binding CompaniesList}"  IsEditable="True"                                        
                        Validation.ErrorTemplate="{StaticResource ValidationTemplate}" Grid.Row="0" Grid.Column="3" Margin="0,5,0,0" Height="25"
                        IsEnabled="{Binding NegateIsEditMode}">
                <ComboBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ComboBoxItem}">
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <Grid Height="30" Width="Auto">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="200"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Label Margin="1" Grid.Row="0" Grid.Column="0" Content="{Binding Name}" HorizontalAlignment="Left"/>
                                        <Label Margin="1" Grid.Row="0" Grid.Column="2" Content="{Binding DueAmount}" HorizontalAlignment="Right"/>
                                    </Grid>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ComboBox.ItemContainerStyle>
                <ComboBox.SelectedItem>
                    <Binding Path="SelectedCompany" NotifyOnValidationError="True">
                        <Binding.ValidationRules>
                            <Validator:ValidateCompanies/>
                        </Binding.ValidationRules>
                    </Binding>
                </ComboBox.SelectedItem>
                <ComboBox.Text>
                    <Binding Path="SelectedCompanyText"/>
                </ComboBox.Text>
            </ComboBox>
            <StackPanel Grid.Row="0" Grid.Column="4" Orientation="Horizontal">
                <Label Content="G.R.No" Width="55" Margin="15,5,0,0"></Label>
                <Label x:Name="txtBillNo" Width="60" Margin="5" Content="{Binding RunningBillNo}"/>
                <Button x:Name="btnAddCustomer" Content="Supplier Quick Add" 
                    Width="130" Command="{Binding}" Margin="5"/>
            </StackPanel>

            <Label Content="Mode Of Payment :" Grid.Row="1" Grid.Column="0" Margin="0,5,0,0" ></Label>
            <ComboBox Name="CboPaymentMode" ItemsSource="{Binding PaymentModes}" SelectedValuePath="PaymentId"
                      DisplayMemberPath="PaymentName" SelectedItem="SelectedPaymentMode" SelectedValue="{Binding SelectedPaymentId}" 
                      Height="25" Grid.Row="1" Grid.Column="1" Margin="0,5,10,5" />

            <Label Content="Invoice No:"  Margin="0,5,0,0" Grid.Row="1" Grid.Column="2"></Label>
            <TextBox Name="txtOrderNo" Text="{Binding InvoiceNo}" Margin="0,5,0,0" Grid.Row="1" Grid.Column="3" Height="20" />

            <!--DataGrid-->
            <toolKit:DataGrid Name="PurchaseDataGrid" IsSynchronizedWithCurrentItem="True" 
                                      ItemsSource="{Binding DataContext.PurchaseDetailList, 
                                                    RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"  
                                      AutoGenerateColumns="False" RowHeight="25" 
                                      Grid.Row="2"
                                      SelectionMode="Single" Grid.ColumnSpan="5"
                                      LoadingRow="DataGrid_LoadingRow"
                                       >
                <toolKit:DataGrid.Resources>
                    <Style x:Key="errorStyle" TargetType="{x:Type TextBox}">
                        <Setter Property="Padding" Value="-2"/>
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="Background" Value="Red"/>
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightBlue" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />
                </toolKit:DataGrid.Resources>
                <toolKit:DataGrid.Columns>
                    <BHCustCtrl:CustDataGridComboBoxColumn  x:Name="custComboBoxCol" Width="250" Header="Products"
                                                                    ItemsSource="{Binding DataContext.ProductsPriceList}"                                                                        
                                                                    SelectedValuePath="ProductId"
                                                                    DisplayMemberPath="ProductName"  
                                                                    CustComboBoxSelectedPath ="ProductId"
                                                                    CustComboBoxSelectedValue ="ProductId"
                                                                    SelectedValueBinding="{Binding ProductId}" 
                                                                    ComboBoxSelectedEvent="custComboBoxCol_ComboBoxSelectedEvent"                                                        
                                >
                        <toolKit:DataGridTextColumn Header="Product Name" Binding="{Binding ProductName}" />
                        <toolKit:DataGridTextColumn Header="Quantity" Binding="{Binding Quantity}" ElementStyle="{StaticResource DataGridCellRightAlign}"/>
                        <toolKit:DataGridTextColumn Header="Selling Price" Binding="{Binding SellingPrice, StringFormat=N2}" ElementStyle="{StaticResource DataGridCellRightAlign}" />
                        <toolKit:DataGridTextColumn Header="Price" Binding="{Binding Price, StringFormat=N2}" ElementStyle="{StaticResource DataGridCellRightAlign}"/>

                    </BHCustCtrl:CustDataGridComboBoxColumn>

                    <toolKit:DataGridTextColumn Width="70"  Header="Quantity" EditingElementStyle="{StaticResource errorStyle}" Binding="{Binding Qty}" ElementStyle="{StaticResource DataGridCellRightAlign}"/>
                    <toolKit:DataGridTextColumn Header="Purchase Price" Binding="{Binding PurchasePrice, StringFormat=N2}" ElementStyle="{StaticResource DataGridCellRightAlign}"/>
                    <toolKit:DataGridTextColumn Header="Free Issue" Binding="{Binding FreeIssue}" ElementStyle="{StaticResource DataGridCellRightAlign}"/>
                    <toolKit:DataGridTextColumn Header="Discount (%)" Binding="{Binding DiscountPercentage}" ElementStyle="{StaticResource DataGridCellRightAlign}"/>
                    <toolKit:DataGridTextColumn Header="Discount Amount" Binding="{Binding DiscountAmount}" ElementStyle="{StaticResource DataGridCellRightAlign}"/>
                    <toolKit:DataGridTextColumn Width="80" Header="Amount" Binding="{Binding Amount, StringFormat=N2}" IsReadOnly="True" ElementStyle="{StaticResource DataGridCellRightAlign}"/>
                    <toolKit:DataGridTextColumn Header="Cost Price" Binding="{Binding CostPrice, StringFormat=N2}" IsReadOnly="True" ElementStyle="{StaticResource DataGridCellRightAlign}"/>
                    <toolKit:DataGridTextColumn Header="Selling Price" Binding="{Binding SellingPrice, StringFormat=N2}" ElementStyle="{StaticResource DataGridCellRightAlign}"/>
                    <toolKit:DataGridTemplateColumn Header="Expiry Date">
                        <toolKit:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ExpiryDate, StringFormat='dd/MM/yyyy'}" />
                            </DataTemplate>
                        </toolKit:DataGridTemplateColumn.CellTemplate>
                        <toolKit:DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <DatePicker SelectedDate="{Binding ExpiryDate, StringFormat='dd/MM/yyyy'}" />
                            </DataTemplate>
                        </toolKit:DataGridTemplateColumn.CellEditingTemplate>
                    </toolKit:DataGridTemplateColumn>
                    <toolKit:DataGridTextColumn Header="Tax" Binding="{Binding Tax}" ElementStyle="{StaticResource DataGridCellRightAlign}"/>
                    <toolKit:DataGridTextColumn Header="Old Cost Price" Binding="{Binding OldCostPrice, StringFormat=N2}" IsReadOnly="True" ElementStyle="{StaticResource DataGridCellRightAlign}"/>
                    <toolKit:DataGridTextColumn Header="Old Selling Price" Binding="{Binding OldSellingPrice, StringFormat=N2}" IsReadOnly="True" ElementStyle="{StaticResource DataGridCellRightAlign}"/>
                    <toolKit:DataGridTextColumn Width="90" Header="Stock" Binding="{Binding AvailableStock}" IsReadOnly="True" ElementStyle="{StaticResource DataGridCellRightAlign}"/>


                </toolKit:DataGrid.Columns>


                <!--<toolKit:DataGrid.RowValidationRules>
                <Validator:QuantityValidationRule ValidationStep="UpdatedValue"/>
            </toolKit:DataGrid.RowValidationRules>

            <toolKit:DataGrid.RowValidationErrorTemplate>
                <ControlTemplate>
                    <Grid Margin="0,-2,0,-2"  ToolTip="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}},
                                                        Path=(Validation.Errors)[0].ErrorContent}">
                        <Ellipse StrokeThickness="0" Fill="Red" Width="{TemplateBinding FontSize}"  Height="{TemplateBinding FontSize}" />
                        <TextBlock Text="!" FontSize="{TemplateBinding FontSize}" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center"  />
                    </Grid>
                </ControlTemplate>
            </toolKit:DataGrid.RowValidationErrorTemplate>-->
            </toolKit:DataGrid>
            <!--DataGrid-->
            <StackPanel Orientation="Horizontal" Grid.Row="3"  HorizontalAlignment="Right" Height="40" Grid.ColumnSpan="5" >


                <Label Content="Tax" Width="120" Margin="5"/>
                <TextBox Text="{Binding TotalTax, TargetNullValue={x:Static sys:String.Empty}}" Width="50" Margin="5" Height="20" />
                <Label Content="Discounts :"   Width="120" Margin="5" FontWeight="ExtraBlack"/>
                <Label Content="Spl Discount Amt"  Width="120" Margin="5"/>
                <TextBox Name="txtSpecialDiscount" Width="50"  Height="20" Margin="5" Text="{Binding SpecialDiscountAmount, TargetNullValue={x:Static sys:String.Empty}}"/>
                <Label Content="Bill Discount Amt"  Width="120" Margin="5"/>
                <TextBox Name="txtDiscount" Width="50" Height="20" Margin="5" IsEnabled="{Binding DiscountEnabled}" Text="{Binding TotalDiscountAmount, UpdateSourceTrigger=PropertyChanged, TargetNullValue={x:Static sys:String.Empty}}"/>
                <Label Content="Bill Discount %" Width="120" Margin="5"/>
                <TextBox Name="txtDiscountPercent" Width="50"  Margin="5" IsEnabled="{Binding DiscountPercentEnabled}" Height="20" Text="{Binding TotalDiscountPercent, UpdateSourceTrigger=PropertyChanged,TargetNullValue={x:Static sys:String.Empty}}"/>
                <Label Content=" " Width="120" Margin="5"/>
                <Label Content="" Width="100" Margin="5"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Grid.Row="4"  HorizontalAlignment="Right" Height="40" Grid.ColumnSpan="5"  >
                <Label Content="Charges    :"   Width="120" Margin="5" FontWeight="ExtraBlack"/>
                <Label Content="Coolie Charges"   Width="120" Margin="5"/>
                <TextBox Name="txtCoolieCharges" Width="50" Margin="5" Height="20" Text="{Binding CoolieCharges, TargetNullValue={x:Static sys:String.Empty}}"/>
                <Label Content="K.Coolie"  Width="120" Margin="5"/>
                <TextBox Name="txtKCoolie" Width="50"  Height="20" Margin="5" Text="{Binding KCoolieCharges, TargetNullValue={x:Static sys:String.Empty}}"/>
                <Label Content="Transport Charges" Width="120" Margin="5"/>
                <TextBox Name="txtTransportCharges" Width="50" Height="20" Margin="5" Text="{Binding TransportCharges, TargetNullValue={x:Static sys:String.Empty}}"/>
                <Label Content="Local Coolie Charges" Width="120" Margin="5"/>
                <TextBox x:Name="txtLocalCoolie"  Width="50" Margin="5" Text="{Binding LocalCoolieCharges, TargetNullValue={x:Static sys:String.Empty}}" VerticalAlignment="Center"/>

                <Label Content="Total Amount"  FontWeight="ExtraBold" Width="120" Margin="5" HorizontalContentAlignment="Right"/>
                <TextBlock x:Name="txtTotalAmount"  Width="100" Margin="5" Text="{Binding TotalAmount, TargetNullValue={x:Static sys:String.Empty}, StringFormat=N2}" FontWeight="ExtraBlack" VerticalAlignment="Center"/>

            </StackPanel>

            <StackPanel Orientation="Horizontal" Grid.Row="5"  HorizontalAlignment="Right" Height="35" Grid.ColumnSpan="5">
                <Label Content="Amount Paid" Margin="5" FontWeight="ExtraBlack"/>
                <TextBox x:Name="txtAmtPaid"  Width="100" Margin="5" Height="20" 
                     Text="{Binding AmountPaid, UpdateSourceTrigger=PropertyChanged}" FontWeight="ExtraBlack" IsEnabled="{Binding NegateIsEditMode}">
                    <i:Interaction.Behaviors>
                        <behaviours:ClearOnFocusedBehavior/>
                    </i:Interaction.Behaviors>
                </TextBox>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Grid.Row="6"  HorizontalAlignment="Right" Height="35" Grid.ColumnSpan="5" >
                <Label Content="Balance" Margin="5" FontWeight="ExtraBold"/>
                <TextBlock x:Name="txtBalance"  Width="100" Margin="5,5,5,5" Text="{Binding BalanceAmount, StringFormat=N2}" FontWeight="ExtraBold" VerticalAlignment="Center"/>
            </StackPanel>

            <StackPanel Grid.Row="7" Orientation="Horizontal"  HorizontalAlignment="Right" Height="40" Grid.ColumnSpan="5">
                <Button x:Name="btnSaveAndPrint" Content="Save &amp; Print"  Width="100" Command="{Binding SaveCommand}" Margin="5" CommandParameter="PrintSave"/>
                <Button x:Name="btnSave" Content="Save"  Width="80" Command="{Binding SaveCommand}" Margin="5" CommandParameter="SaveOnly"/>
                <Button x:Name="btnCancel" Content="Cancel Purchase"  Width="120" Command="{Binding CancelPurchaseCommand}" Margin="5" Visibility="{Binding IsVisible}"/>
                <Button x:Name="btClear" Content="Clear"  Width="80" Command="{Binding ClearCommand}"  Margin="5"  IsEnabled="{Binding NegateIsEditMode}"/>
                <Button x:Name="btCancel" Content="Cancel"  Width="80" Command="{Binding CloseCommand}"  Margin="5"/>
            </StackPanel>

        </Grid>
    </xctk:BusyIndicator>
</UserControl>