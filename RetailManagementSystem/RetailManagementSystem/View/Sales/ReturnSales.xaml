<UserControl x:Class="RetailManagementSystem.View.Sales.ReturnSales"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"              
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"
             xmlns:toolKit="http://schemas.microsoft.com/wpf/2008/toolkit"
             xmlns:BHCustCtrl="clr-namespace:BHCustCtrl;assembly=BHCustCtrl"    
             xmlns:Validator="clr-namespace:RetailManagementSystem.Validation" 
             xmlns:behaviours="clr-namespace:RetailManagementSystem.View.Behaviours"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="800"
             xmlns:conv="clr-namespace:RetailManagementSystem.Converter"
             FocusManager.FocusedElement="{Binding ElementName=txtBillNo}"
             xmlns:UC="clr-namespace:RetailManagementSystem.UserControls"             
             >
    <UserControl.Resources>
        <Style TargetType="{x:Type DatePickerTextBox}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBox x:Name="PART_TextBox"
                             Text="{Binding Path=SelectedDate, StringFormat='dd/MM/yyyy', 
                             RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ValidationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>

        <Style x:Key="DataGridCellRightAlign" TargetType="TextBlock">
            <Style.Setters>
                <Setter Property="HorizontalAlignment" Value="Right" />
            </Style.Setters>
        </Style>

        <conv:ComboBoxConverter x:Key="cmbConverter"/>
        <conv:ProductValueConverter x:Key="ProductValueConverter"/>
        <conv:PriceValueConverter x:Key="PriceValueConverter"/>


    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="113" />
            <ColumnDefinition Width="106"/>
            <ColumnDefinition Width="100"/>
            <ColumnDefinition Width="117"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="34"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="100*"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
        </Grid.RowDefinitions>
        <Label Content="Bill No :" Grid.Row="0" Grid.Column="0" Margin="0,5,0,0"/>
        <Label Content="Customer Name :" Grid.Row="0" Grid.Column="3" Margin="0,5,0,0"/>

        <Label Content="Sale Date" Grid.Row="1" Grid.Column="0" Margin="0,5,0,0" ></Label>
        <TextBox Name="txtBillNo" Text="{Binding BillNo, TargetNullValue={x:Static sys:String.Empty}}" Margin="0,10,0,4" 
                 Grid.Row="0" Grid.Column="1" Width="100" HorizontalAlignment="Left"/>
        <Button Width="80" Content="Get Bill" Grid.Row="0" Grid.Column="2" HorizontalAlignment="Left"
                Command="{Binding GetBillCommand}" Margin="5,5,0,4"/>

        <!--DataGrid-->
        <toolKit:DataGrid Name="ReturnSalesDataGrid" IsSynchronizedWithCurrentItem="True" 
                                      ItemsSource="{Binding ReturnSaleDetailList}"  
                                      AutoGenerateColumns="False" RowHeight="25" 
                                      Grid.Row="2"
                                      SelectionMode="Single" Grid.ColumnSpan="5"                                      
                                      RowHeaderWidth="25"
                                      VirtualizingStackPanel.IsVirtualizing="False"
                                       >
            <toolKit:DataGrid.Resources>
                <Style x:Key="errorStyle" TargetType="{x:Type TextBox}">
                    <Setter Property="Padding" Value="-2"/>
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="Background" Value="Red"/>
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </toolKit:DataGrid.Resources>
            <toolKit:DataGrid.Columns>
                <toolKit:DataGridCheckBoxColumn Header="Select" Width="50" CanUserResize="False" Visibility="Hidden" Binding="{Binding Selected, UpdateSourceTrigger=PropertyChanged}"/>
                <toolKit:DataGridTemplateColumn  Header="Return Product Price" Width="250" >
                    <toolKit:DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid ShowGridLines="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="170"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="{Binding ProductId}"/>
                                <TextBlock Grid.Column="1" Text="{Binding PriceId}"/>
                            </Grid>
                        </DataTemplate>
                    </toolKit:DataGridTemplateColumn.CellTemplate>
                    <toolKit:DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <Grid x:Name="Grid1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="170"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <ComboBox x:Name="cmbProduct" Grid.Column="0" 
                                          ItemsSource="{Binding DataContext.ProductsList, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                                          SelectedItem="{Binding ProductId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource ProductValueConverter} }" 
                                          SelectedValuePath="Id" DisplayMemberPath="Name" SelectedValue="{Binding ProductId}"
                                          SelectionChanged="cmbProduct_SelectionChanged"
                                          />
                                <ComboBox x:Name="cmbPrice" Grid.Column="1"
                                          SelectedItem="{Binding PriceId,                                                        
                                                         Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource PriceValueConverter}}" 
                                          SelectedValuePath="PriceId" DisplayMemberPath="Price" 
                                          SelectionChanged="cmbPrice_SelectionChanged">
                                    <ComboBox.ItemsSource>
                                        <MultiBinding Converter="{StaticResource cmbConverter}">
                                            <!--<Binding Path="DataContext.ProductsList" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type UserControl}}" , Converter={StaticResource ComboBoxValueConverter}/>-->
                                            <Binding Path="SelectedItem" ElementName="cmbProduct"/>
                                            <!--<Binding Path="DataContext.SelectedPriceListItem" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type UserControl}}"/>-->
                                        </MultiBinding>
                                    </ComboBox.ItemsSource>
                                </ComboBox>
                            </Grid>
                        </DataTemplate>
                    </toolKit:DataGridTemplateColumn.CellEditingTemplate>
                </toolKit:DataGridTemplateColumn>
                <toolKit:DataGridTextColumn Width="250" x:Name="ProductName" Header="Product Name" IsReadOnly="True" Binding="{Binding ProductName}"/>
                <toolKit:DataGridTextColumn Width="150" Header="Purchased Quantity" Binding="{Binding Qty}" Visibility="Hidden" IsReadOnly="True" ElementStyle="{StaticResource DataGridCellRightAlign}"/>
                <toolKit:DataGridTextColumn Header="Purchased Price" Binding="{Binding CostPrice}" Visibility="Hidden" IsReadOnly="True" ElementStyle="{StaticResource DataGridCellRightAlign}"/>
                <toolKit:DataGridTextColumn Width="100"  Header="Return Price" Binding="{Binding ReturnPrice}" IsReadOnly="True"  ElementStyle="{StaticResource DataGridCellRightAlign}"/>
                <toolKit:DataGridTextColumn Width="150"  Header="Return Quantity" Binding="{Binding ReturnQty}" ElementStyle="{StaticResource DataGridCellRightAlign}"/>
                <toolKit:DataGridTextColumn Header="Selling Price" Binding="{Binding SellingPrice}" IsReadOnly="True"  Visibility="Hidden" ElementStyle="{StaticResource DataGridCellRightAlign}"/>
                <toolKit:DataGridTextColumn Header="Discount (%)" Binding="{Binding DiscountPercentage}"  IsReadOnly="True" Visibility="Hidden" ElementStyle="{StaticResource DataGridCellRightAlign}"/>
                <toolKit:DataGridTextColumn Header="Discount Amount" Binding="{Binding DiscountAmount}"  IsReadOnly="True" Visibility="Hidden" ElementStyle="{StaticResource DataGridCellRightAlign}"/>
                <toolKit:DataGridTextColumn Width="150" Header="Amount" Binding="{Binding Amount, StringFormat=N2}"  IsReadOnly="True" ElementStyle="{StaticResource DataGridCellRightAlign}"/>
                <!--<toolKit:DataGridTextColumn Width="150" Header="Stock Available" Binding="{Binding AvailableStock}" Visibility="Hidden" IsReadOnly="True" ElementStyle="{StaticResource DataGridCellRightAlign}"/>-->

            </toolKit:DataGrid.Columns>
            <toolKit:DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type toolKit:DataGridColumnHeader}">
                    <Setter Property="FontWeight"  Value="Bold" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                </Style>
            </toolKit:DataGrid.ColumnHeaderStyle>

            <!--<toolKit:DataGrid.RowValidationRules>
                <Validator:QuantityValidationRule ValidationStep="UpdatedValue"/>
            </toolKit:DataGrid.RowValidationRules>

            <toolKit:DataGrid.RowValidationErrorTemplate>
                <ControlTemplate>
                    <Grid Margin="0,-2,0,-2"  ToolTip="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}},
                                                        Path=(Validation.Errors)[0].ErrorContent}">
                        <Ellipse StrokeThickness="0" Fill="Red" Width="{TemplateBinding FontSize}"  Height="{TemplateBinding FontSize}" />
                        <TextBlock Text="!" FontSize="{TemplateBinding FontSize}" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center"  />
                    </Grid>
                </ControlTemplate>
            </toolKit:DataGrid.RowValidationErrorTemplate>-->
        </toolKit:DataGrid>
        <!--DataGrid-->
        <StackPanel Orientation="Horizontal" Grid.Row="3"  HorizontalAlignment="Right" Grid.ColumnSpan="3" Grid.Column="3" >
            <!--<Label Content="Discount Amt"  Margin="5,5,5,5"/>
            <TextBox Name="txtDiscount" Width="40" Margin="5,5,10,5" Height="20" Text="{Binding TotalDiscountAmount}"/>
            <Label Content="Discount %" Width="70" Margin="5"/>
            <TextBox Name="txtDiscountPercent" Width="30" Margin="5" Height="20" Text="{Binding TotalDiscountPercent}"/>-->

            <Label Content="Total" Margin="5" FontWeight="ExtraBold"/>
            <TextBlock x:Name="txtTotalAmount"  Width="100" Margin="5,5,5,5" Text="{Binding TotalAmount, StringFormat=N2, TargetNullValue={x:Static sys:String.Empty}}" FontWeight="ExtraBold" VerticalAlignment="Center"/>
        </StackPanel>

        <StackPanel Orientation="Horizontal" Grid.Row="6"  HorizontalAlignment="Right" Grid.ColumnSpan="2" Grid.Column="3" Width="380">
            <Button x:Name="btnSavePrint" Content="Save &amp; Print"  Width="100" Command="{Binding SaveCommand}" Margin="5"/>
            <Button x:Name="btnSave" Content="Save"  Width="80" Command="{Binding SaveCommand}" Margin="5"/>
            <Button x:Name="btClear" Content="Clear"  Width="80" Command="{Binding ClearCommand}"  Margin="5"/>
            <Button x:Name="btCancel" Content="Cancel"  Width="80" Command="{Binding CloseCommand}"  Margin="5"/>
        </StackPanel>
        <TextBox x:Name="txtCustomer" Text="{Binding CustomerName, TargetNullValue={x:Static sys:String.Empty}}" Margin="0,10,0,4" 
            Grid.Row="0" Grid.Column="4" Width="150" HorizontalAlignment="Left" IsReadOnly="True"/>
        <TextBox x:Name="txtSaleDate" Text="{Binding SaleDate, TargetNullValue={x:Static sys:String.Empty},StringFormat='dd/MM/yyyy'}" Margin="0,12,0,8" 
            Grid.Row="1" Grid.Column="1" Width="100" HorizontalAlignment="Left" IsReadOnly="True"/>
        <Label Content="Mode Of Payment :" Grid.Row="1" Grid.Column="3" Margin="0,5,0,0" />
        <TextBox x:Name="txtPaymentMode" Text="{Binding ModeOfPayment, TargetNullValue={x:Static sys:String.Empty}}" Margin="0,12,0,8" 
            Grid.Row="1" Grid.Column="4" Width="100" HorizontalAlignment="Left" IsReadOnly="True"/>

    </Grid>
</UserControl>




